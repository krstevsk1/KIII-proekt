---
apiVersion: v1
kind: Namespace
metadata:
  name: my-namespace
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: my-namespace
data:
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-db:3306/kiii-data?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true"
  SPRING_DATASOURCE_USERNAME: "root"
  SPRING_DATASOURCE_PASSWORD: "1234"
  SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: my-namespace
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: "MTIzNA=="  # base64 encoded '1234'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: my-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: krstevsk1/spring-app
          ports:
            - containerPort: 9090
          startupProbe:
            tcpSocket:
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"  # Use the correct username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD  # Use the correct secret key
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: SPRING_JPA_HIBERNATE_DDL_AUTO
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: spring-app-service
  namespace: my-namespace
spec:
  selector:
    app: app  # Match the label in the Deployment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090
      nodePort: 30080
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-app-ingress
  namespace: my-namespace
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx  # Ensure this matches the Ingress controller
  rules:
    - host: myapp.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-app-service
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: my-namespace
data:
  MYSQL_DATABASE: "kiii-data"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-db
  namespace: my-namespace
spec:
  serviceName: "mysql-db"
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql:8.0
          ports:
            - containerPort: 3306
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - "-h"
                - "127.0.0.1"
            initialDelaySeconds: 20
            periodSeconds: 10
          envFrom:
            - configMapRef:
                name: mysql-config
            - secretRef:
                name: mysql-secret
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
  namespace: my-namespace
spec:
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP